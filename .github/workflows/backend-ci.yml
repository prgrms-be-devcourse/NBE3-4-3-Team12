name: Backend CI # 그냥 작업 이름 특별한 이유 없고 Front CI와 구분을 위한 이름

on: # 워크플로우가 트리거되는 이벤트를 정의
  push:
    # 특정 브랜치에 푸쉬될때
    # feature/ 이런식으로 기능개발을 하기 때문에 추가함
    # 다른 이름의  작업 브랜치를 쓰신다면 개인적으로 추가해주면 될 것 같습니다. "" 없이 브랜치 이름을 추가.
    branches: [ main , kotlin-migration, 'feature/*' ]
    paths:
      - 'backend/**'
      - '.github/workflows/**'  # 워크플로우 파일 자체가 변경되어도 실행
  pull_request:
    branches: [ main ] # upstream master(여기서는 main)에 pr날릴때
    paths:
      - 'backend/**'

jobs: #workflow에서 실행 작업들 모음
  build:
    runs-on: ubuntu-latest # 실행환경 최신 우분투
    defaults: # 작업 내 모든 단계에 적용될 기본 설정
      run: # 모든 명령어가 실행될 기본 디렉토리
        working-directory: ./backend

    steps: # 순차로 실행
      - uses: actions/checkout@v3 # actions/checkout@v3는 GitHub에서 제공하는 공식 액션, 저장소 코드를 작업 환경으로 가져옵니다.
      - name: Set up JDK 21
        uses: actions/setup-java@v3 # JDK를 설정(미리 제공)
        with: # 버전들
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3 # actions/cache@v3 액션을 사용하여 빌드 속도를 향상시키기 위해 캐싱
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests with environment variables
        run: ./gradlew test --info --stacktrace
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:h2:mem:testdb;MODE=MySQL;
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
          SPRING_DATASOURCE_USERNAME: sa
          SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
          SPRING_SECURITY_JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          SPRING_SECURITY_JWT_ACCESS_TOKEN_EXPIRATION: 216000
          SPRING_SECURITY_JWT_REFRESH_TOKEN_EXPIRATION: 518400
          SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECT_URI: http://localhost:8080/auth/kakao/callback
          SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_AUTHORIZATION_GRANT_TYPE: authorization_code
          SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_SCOPE: profile_nickname,profile_image,account_email
          SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_AUTHORIZATION_URI: https://kauth.kakao.com/oauth/authorize
          SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_TOKEN_URI: https://kauth.kakao.com/oauth/token
          SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_INFO_URI: https://kapi.kakao.com/v2/user/me
          SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_NAME_ATTRIBUTE: id
          LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
          KAKAO_LOGOUT_URL: https://kauth.kakao.com/oauth/logout
          KAKAO_LOGOUT_REDIRECT_URI: http://localhost:8080/auth/kakao/callback/
          CLIENT_BASE_URL: http://localhost:3000
            --info --stacktrace